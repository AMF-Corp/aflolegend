{% extends 'base.html.twig' %}

{% block title %}Liste de Cartes
{% endblock %}

{% block body %}
	<style>
		.container {
			display: flex;
			justify-content: space-between;
			padding: 20px;
		}
		.card-container,
		.deck-container {
			display: flex;
			flex-wrap: wrap;
			justify-content: space-around;
		}
		.card,
		.deck-card {
			cursor: pointer;
			margin: 10px;
			padding: 20px;
			width: 200px;
			height: auto;
			box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
			border-radius: 10px;
			background: #FFF;
			transition: transform 0.2s;
		}
		.card:hover,
		.deck-card:hover {
			transform: translateY(-5px);
		}
		.card img,
		.deck-card img {
			width: 100%;
			height: 150px;
			object-fit: cover;
			border-radius: 10px;
		}
		.deck-container {
			min-width: 30%;
			border: 3px dashed #ccc;
			padding: 10px;
			border-radius: 10px;
		}
		.deck-heading {
			text-align: center;
			font-size: 1.5em;
			margin-bottom: 20px;
		}
	</style>

	<div class="container">
		<div class="card-container" style="width: 65%;">
			{% for carte in cartes %}
				<div class="card deck-card" onclick="addToDeck('{{ carte | json_encode | e('js') }}', this)">
					<img src="{{ carte.image }}" alt="Image of {{ carte.name }}">
					<h2>{{ carte.name }}</h2>
					<p>Category:
						{{ carte.category }}</p>
					<p>HP:
						{{ carte.hp }}</p>
					<p>{{ carte.description }}</p>
				</div>
			{% endfor %}
		</div>

		<div class="deck-container" id="deck">
			<div class="deck-heading">Your Deck (0/40)</div>
		</div>
	</div>

	<script>
		let deck = [];
const deckLimit = 40;
const deckContainer = document.getElementById('deck');
const deckCounter = deckContainer.querySelector('.deck-heading');

function addToDeck(cardData, element) {
let card = JSON.parse(cardData);
if (deck.length<deckLimit && !deck.some(e => e.id === card.id) ) {
deck.push(card);
const cardElement = element.cloneNode(true);
cardElement.onclick = function () {
removeFromDeck(card.id, this);
};
deckContainer.appendChild(cardElement);
updateDeckCount();
} else {
alert("Deck is full or card is already added.");
}
}

function removeFromDeck(cardId, element) {
deck = deck.filter(card => card.id !== cardId);
element.parentNode.removeChild(element);
updateDeckCount();
}

function updateDeckCount() {
deckCounter.textContent = `Your Deck (${
deck.length
}/40)`;
}
	</script>
{% endblock %}
